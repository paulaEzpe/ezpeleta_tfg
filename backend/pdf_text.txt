arXiv:2201.01383v1 [quant-ph] 4 Jan 2022  Fixed Point Quantum Monte Carlo  Romain Chessex, ∗   Massimo Borrelli, and Hans Christian  ̈ Ottinger  Polymer Physics, Department of Materials, ETH Z ̈ urich, CH-8093 Z ̈ urich, Switzerland  (Dated: January 6, 2022) We present a new approach to the study of equilibrium properties in many-body quantum physics. Our method takes inspiration from Density Matrix Quantum Monte Carlo and incorporates new crucial features.   First of all, the dynamics is transferred to the Laplace representation where an exact equation can be derived and solved using a simulation-step that, unlike most Monte Carlo methods, is not   a priori   physically bounded. Moreover, the spawning events are formulated in terms of two-process stochastic unravellings of quantum master equations, a formalism that is particularly useful when working with density matrices.   And last, this is equivalent to an interaction picture, where the free part is integrated exactly and the convergence rate can be greatly increased if the interaction parameter is small.   We benchmark our method by applying it to two case-studies in condensed matter physics, show its accuracy and further discuss its efficiency.  I.   INTRODUCTION  Quantum Monte Carlo (QMC) methods have been es- tablished as a leading paradigm for numerical simula- tions in computational quantum physics, with success- ful applications in condensed matter as well as in quan- tum chemistry [1, 2].   Different approaches have been developed whose applicability can depend strongly on the specific physical or chemical system under investiga- tion. Variational Quantum Monte Carlo (VQMC) [3, 4] and Projector Quantum Monte Carlo (PQMC) [5, 6] are probably the most common methods for studying the zero-temperature properties of highly-correlated many- body systems, though they greatly differ from one an- other.   While in VQMC the ground state energy of is obtained via a minimization procedure starting from an initial guess of the ground state function, PQMC meth- ods, such as Diffusion Monte Carlo and Green Func- tion Monte Carlo [7–10], rely on an iterative stochas- tic projection that will drive the state of the system to its true ground state.   For non-zero temperature sys- tems, Auxiliary Field Monte Carlo (AFMC) [11–13] and Path Integral Monte Carlo (PIMC) [14] have been formu- lated, based on thermal field theory, to investigate lattice models and quantum statistical mechanics, respectively. While for bosons QMC methods have proven extremely successful and have provided nearly exact results [15–17], simulations for fermionic systems have long been ham- pered by the well-known sign-problem [18–21], a numer- ical artifact arising as a direct consequence of the anti- symmetric properties of the wave-function.   The fixed- node approximation [22–24] based on guessing the nodal structure for an initial trial function, has given some good results, although its applicability is strongly limited by the feasibility to effectively assess such a structure prior to the simulation. In [25, 26] a new projective QMC method was intro- duced to investigate the zero-temperature properties of  ∗   rchessex@ethz.ch  correlated electrons.   This method, named Full Config- uration Interaction Quantum Monte Carlo (FCIQMC), relies on simulating stochastic trajectories in the space of Slater determinants, thus not requiring any prior knowl- edge about the nodal structure of the many-body wave- function and allowing one to tackle the sign problem more directly, based on efficient annihilation of unde- sired Monte Carlo walkers [27, 28]. A few years later, a density matrix method (DMQMC) inspired by FCIQMC was introduced in [29] and applied to study finite tem- perature behaviour of correlated fermions [30, 31]. Here, the authors devised a Monte Carlo algorithm that sim- ulates trajectories in the space of operators, rather than quantum states, and it therefore offers a natural recipe to sample stochastically the relevant density matrix el- ements independently.   Moreover, using this method al- lows for a direct evaluation of quantities such as entangle- ment and correlations in general. Recently, this approach was extended to open quantum systems described by a Lindblad-type master equation and applied to dissipative quantum magnetism [32]. Here, we adopt a DMQMC approach and combine it with a field theory framework to study equilibrium prop- erties of strongly interacting many-body systems. Start- ing from the general theoretical framework originally in- troduced in [33] and later fully illustrated in [34], we design a Quantum Monte Carlo algorithm based on two- process stochastic unravellings [34, 35] to solve the sym- metrized Bloch equation.   The main advantage of our approach, as opposed the standard DMQMC, lies in the use of a completely general and exact methodology de- scribing the dynamics of the fully interacting many-body system in the Laplace space.   Most importantly, our framework can be considered as an interaction picture, in the sense that the system evolves in the basis of the free Hamiltonian.   This is obviously of tremendous help since in free field theories the eigenbasis is virtually al- ways known   a priori   and its evolution can be integrated exactly.   Moreover, this provides a recipe for numerical integration in which no physical bounds on the simu- lation time-step are present.   This is in stark contrast to standard projective methods where the total width 2  of the many-body spectrum usually sets a fundamental limit.   From an implementation perspective, our algo- rithm includes a series of standard MC features, such as importance sampling and approximations, that decrease the statistical errors and speed-up the simulations.   To demonstrate the efficiency and range of applicability of our method we study the ground-state convergence in two well-known models in condensed matter physics, namely the two-dimensional Heisenberg XXZ model [36] and the Fermi-Hubbard model [37]. This article is organised as follows. In Sec.   II   we illus- trate the theoretical basis of our algorithm.   In Sec.   III  we introduce the QMC algorithm itself and explain the main steps in detail. In Sec.   IV   we test the algorithm and discuss our findings.   Finally, in Sec.   V   we draw some conclusions and outline some open questions for future investigations.  II.   THEORETICAL FOUNDATIONS OF THE ALGORITHM  In this section we illustrate the main theoretical ideas behind our Monte-Carlo approach.   First, we will illus- trate the fundamental equation describing the evolution of a quantum system toward its ground state. After this, we shall introduce the stochastic unravelling approach that will serve as the starting point for the algorithmic implementation.  A.   The deterministic model  The typical scenario we want to address is a that of a many-body quantum system whose dynamics is dictated by the Hamiltonian  H   =   H free   +   H int ,   (1) where the eigensystem of the free Hamiltonian   H free   is fully known and [ H free , H int ]   6   = 0. Since we want to work with the density matrix formalism, all the following dis- cussions will be entirely formulated in terms of superop- erators to describe the time-evolution of quantum states. Generally speaking, the time evolution of the density ma- trix   ρ , describing the state of the many-body system, is dictated by Von Neumann equation  d  dt ρ   =   − i [ H, ρ ] .   (2) As we are interested in ground state properties, similarly to previous projective methods [25, 29] we consider the following imaginary-time symmetric equation, known as Bloch equation [29]  d  dβ ρ   =   −   1  2   { H, ρ }   =   L ρ,   (3) with   β   =   it . If one introduces an energy shift  H   7   →   H   −   S ρ ,   S ρ   = Tr( Hρ )  Tr( ρ )   ,   (4) Eq. ( 3 ) becomes a legitimate master equation, with trace- preserving properties. Adding this energy shift results in an extra term   S ρ ρ   on the right and side of Eq. ( 3 ).   In doing that, one trades the advantage of a trace-preserving equation at the expense of introducing non-linearity in the original equation. The general solution of the shifted Bloch equation ( 4 ) reads  ρ β   =   e −   β  2   ( H − S ρ ) ρ 0 e −   β  2   ( H − S ρ   ) .   (5) If the ground-state of the system is non-degenerate, when  β   → ∞ , its contribution to the above expansion will become the dominant one, that is lim  β →∞   ρ β   ∝ | E 0 〉〈 E 0 | ,   (6) which implies that   S ρ   →   E 0   consistently.   The non- linearity in Eq. ( 4 ) makes the solution of the Bloch equa- tion a non-trivial problem that might require further ap- proximations when one is not just interested in steady state properties.   For that reason, we do not solve the evolution equations in full, but rather rely on a modi- fied version of the stationary condition.   Starting from the observation that the most general solution Eq.   ( 5 ) can be re-expressed in terms of the one-sided dynamical generator   L , that is  ρ β   =   e L β   ρ 0 ,   (7) the following stationary condition can be easily derived  L ρ ∞   = 0 ,   (8) by imposing   dρ/dβ   = 0, with   ρ ∞   being the steady state. If we multiply both side of Eq. ( 8 ) by an inverse tempera- ture scale 1 /r   we can recast this equation in the following dimensionless form  (  1 +   L  r  )  ρ ∞   =   ρ ∞ ,   (9) and by decomposing the total Liouvillian superoperator  L   into its free and interaction part,   L free   and   L int   respec- tively, Eq. ( 9 ) can be further rewritten as  r  (  1 +   L int  r  )  ρ ∞   =   ( r   − L free )   ρ ∞ .   (10) The right hand side of the above equation is the inverse of the Laplace transform of   e β L free  , i.e.  R free  r   =  ∫   ∞  0  e β L free  e − rβ   dβ   =   1  r   − L free   .   (11) Once replaced in Eq. ( 10 ) it leads to  r R free  r  (  1 +   L int  r  )  ρ ∞   =   ρ ∞ ,   (12) which is the fundamental equation for all our ground state calculations. 3  B.   Two-process stochastic unravelling  All the results illustrated so far are exact and represent a continuous and deterministic description of the density matrix evolution. Needless to say, for multi-particle sys- tems with intricate interactions, a numerically exact so- lution of Eq. ( 12 ) is practically out of reach, owning to the huge dimension of the Hilbert space. However, by a successive application of the Eq. ( 12 ), one gets  [  r R free  r  (  1 +   L int  r  )] n  ρ ∞   =   ρ ∞ ,   (13) where   r   is fixed, setting the inverse temperature reso- lution.   Obviously, in the zero temperature limit, the ground-state will emerge as the solution to Eq. ( 12 ) and its iterated version ( 13 ) as well. Starting from this obser- vation a stochastic unravelling, which we named   triplet unravelling , can be developed.   This relies on stochas- tic trajectories in the Hilbert space that are represented by triplets of the form ( c,   | φ 〉 ,   | ψ 〉 ) with   c   being a com- plex number.   The piece-wise-deterministic stochastic processes will alternate between continuous, exact free evolution, as dictated by   H free , interrupted by random quantum jumps (or collisions) associated to   H int . In or- der for this method to provide a statistically robust so- lution to Eq. ( 13 ), the following equation must hold  ρ ∞   =   E [ c | φ 〉〈 ψ | ] ,   (14) in which   E   represents a statistical average over all the trajectories.   In other words, the solution to the exact Eq. ( 12 ),   i.e.   the ground state, must be recovered. Since we are working with the density matrix formalism and we aim at generating trajectories that are the least pos- sible statistically correlated, we model two-side collision processes as follows  | φ 〉〈 ψ | → | φ 〉〈 ψ | −   1  2 r  ( H int | φ 〉〈 ψ |   +   | φ 〉〈 ψ | H int )   ,   (15) which can be interpreted as a stochastic implementation of the operator  (  1 +   L int  r  )  with quantum jumps occur- ring between connected states at a rate   r . As for the free evolution, we assume this can be solved exactly which is always the case if the free Hamiltonian   H free   is fully known and its eigenstates are used as basis for the triplet realizations.  III.   ALGORITHMIC REALIZATION OF TRIPLET UNRAVELLING  In this section we present our algorithm. For the sake of clarity and readability, the original features of our algo- rithm are explained thoroughly, while in the Appendices we discuss some aspects that our method shares with DMQMC and FICQMC as well as other minor technical- ities. We introduce the following short-hand notation for a triplet ( c,   | φ 〉 ,   | ψ 〉 )   ≡   ( c, φ, ψ ), which will be adopted in all following discussions.  A.   The Monte-Carlo walkers: triplets  Like any other Monte-Carlo method, ours too statisti- cally samples the density matrix representing the steady state via an ensemble of walkers. These are chosen as an ensemble of triplets   { ( c n , i n , j n ) } n , where   i n , j n   are local basis vectors ( e.g. , the free Hamiltonian eigenstates) and the   c n   weights are, in general, complex. The evolution of this ensemble will be our Monte Carlo simulation of the piece-wise unravelling provided by Eq. ( 15 ) of the Bloch equation in the Laplace representation. If one generates  N   stochastic trajectories, the density matrix is statisti- cally reconstructed via the following average  ρ   =   1  N  ∑  n  c n | i n 〉〈 j n | ,   (16) where   n   labels a single trajectory and the normalization  N   =   ∑  n   c n Tr( | i n 〉〈 j n | ) ensures that density matrix has the correct trace. Note that the addition of the normal- ization solves the non-conserving trace problem of the shifted Bloch equation. After initializing the density ma- trix ensemble to the free Hamiltonian ground state, the algorithm develops in a series of identical loops, each loop consisting of two main steps, spawning events, realized via quantum jumps, and continuous free evolution.   As we shall show, the use of a discrete basis, combined with a signed weight for the triplets, will be the key for an effec- tive cancellation of positive and negative contributions to averages, allowing to reduce the sign problem.   Finally, statistical quantum averages of operators can be easily calculated using the ensemble statistics. Using Eq. ( 16 ) one finds that for a general operator   A   and an ensem- ble   { ( c n , i n , j n ) } n   the quantity Tr( Aρ ) at the end of each loop iteration can be estimated as Tr( Aρ ) =  ∑  n   c n a i n   j n  ∑  n   c n δ i n   j n  ,   (17) where   a i n   j n   = Tr( A | i n 〉〈 j n | ). In order to illustrate better the ensemble normalisation, we define the   population of the ensemble   as the sum of the absolute weight over all the triplets.  B.   The main loop  The   algorithm   starts   by   initializing   the   statistical ensemble to the free Hamiltonian ground state, that is ( c init ,   | e 0 〉 ,   〈 e 0 | ), with   c init   >   0.   If the free ground state is degenerate,   N i   ≤   N   f  GS   triplets are chosen uniformly among the   N   f  GS   possible ground states. In what follows we illustrate the main loop of the algorithm, including the compression/decompression steps (see Appendix   A ).  a.   Spawning  1.   Pre-spawning decompression. 4 2.   Spawning.   For each unit-weight triplet either one of the two states is chosen randomly (quantum me- chanically, either a ket or a bra).   For instance, if the ket is chosen, a new state   k   is spawned from  i n   with probability   p i n   k . Then the newly spawned triplet will read  [  − sign( c n )   H int  i n   k  rp i n   k  , k, j n  ]  .   (18) Equivalently if   j n   is selected. This step numerically implements the application of the super-operator (1 +   L int  r   ).   The new state   k   is usually chosen uniformly among all the possible   n s   spawning events such that   〈 k | H int | i n 〉 6   = 0 and whose probability is   p i n   k   = 1 /n s .  b.   Free evolution  1.   Triplets compression.  2.   For each ( c n , i n , j n ) a weight update for the free contribution is performed according to  c n   7   →   r  r   −   S   + ( H free  i n   i n   +   H free  j n   j n   ) / 2   c n .   (19) Complementary to the previous step, this step numeri- cally implements the application of   r R free  r   , the Laplace transform of the free evolution operator.   If the local states   i n   and   j n   are eigenvectors of the free Hamiltonian, which will always be the case in our simulations, this step is exact and it only modifies the statistical weights of the triplets.   The shift can then be updated.   When the population has reached the desired value, the shift is updated regularly. This will have the effect to stabilize the evolution of the population.   We previously defined the shift to be the average energy Tr( Hρ ) / Tr( ρ ) but this choice turns out to be less efficient than the prescription used in the DMQMC method (see Appendix   B   for more details).  C.   Importance sampling and initiator approximation  We introduce an importance sampling scheme based on a   dynamic norm   n ij   , defined for a triplet ( c, i, j ) as the minimum number of applications of the interaction Hamiltonian   H int   needed to jump from   i   to   j . This idea is rooted in the observation that, for short-range interac- tion systems, most of the observables average values are sampled by triplets with a short dynamic norm.In order to reduce the variance, instead of visiting all the possi- ble connecting states, we force spawning events towards states with a shorter dynamic norm, thus limiting the statistical exploration of the Hilbert space to relevant re- gions only. One can picture this as forcing the stochastic  c   w  ( c, i, j )  (   c  | w |   , i, j  ) (   c  | w |   , i, j  ) (   c  | w |   , i, j  )  FIG. 1.   Example of a triplet split ( c, i, j ) according to the weight factors (red) with physical weight   c   (blue). The origi- nal triplet with   | c |   = 6 and bias   b ij   = 2 is split into   ⌊| w |⌋   = 3 child triplets according to the weight factor. Each child triplet will then attempt a single spawning from (   c  | w |   , i, j ).  sampling to occur mostly around the main diagonal of the density matrix. To make this idea concrete we associate to a triplet two types of weight, a   physical weight   and a   weight factor .   The first, denoted by   c , is the weight that has been used until now for averages.   The latter, denoted by   w , reflects instead the number of spawning attempts that will be performed by a triplet.   The two are related by a norm-dependent bias   b   ≡   b ( n ij   )   >   1 via the equation   c   =   bw . In order to decrease the num- ber of triplets with large dynamic norm the bias should increase as the norm increases. Accordingly, the decom- pression step is performed with respect to the weight fac- tors   w   as to decrease the relative number of spawning at- tempts associated to larger dynamic norms. This means that triplets ( c, i, j ) are split into   ⌊| w |⌋   child triplets of weight   c/ | w |   and a rest triplet surviving with probability  | w | − ⌊| w |⌋ . If the rest triplet survives, its weight is up- dated to   c/ | w | . Hence, those triplets associated to larger dynamic norms (corresponding to larger biases) will at- tempt less spawning events, keeping the simulation from explore unimportant regions of the Hilbert space.   This procedure is illustrated in Fig.   1 . Up to this point, no ex- plicit formula for the bias   b   has been provided. Based on early discussions, it must be norm-dependent, and must increase as the   n ij   increases. We model the importance sampling as a harmonic interaction with spring constant  κ   between the states   i   and   j   which will force them to stay dynamically close. The corresponding bias reads  b   = exp  (   κ  2   n 2  ij  )  .   (20) Note, that with that choice   b ii   = 1, which implies that the initial ensemble is unbiased.   As a side remark, we note that each spawning event requires at least the com- putation of two norms: one for the original state and one for the spawning. If the dynamic norm is computation- ally expensive, it can make the simulation very inefficient. However, another norm ˆ n ij   between states can still be de- fined in order to reduce the variance while being faster to compute and numerically close to the dynamic norm. 5  An example of an alternate norm will be used in Sec.  IV . Note also that the population is computed with the weight factors, to reflect the correct number of spawning performed. We conclude this section by illustrating our initiator approximation, which is based on the FCIQMC version in [26]. The rationale here is to have an additional survival criterion for the newly spawned triplets that reduces the ensemble population needed for convergence. Only some triplets, labelled as   initiators , will be given the possibil- ity to spawn other triplets that are not yet present in the original ensemble.   The only exception to this rule is if two triplets spawn simultaneously the same triplet. The ensemble of initiators can increase if their weight, in ab- solute value, is larger than a critical value   c init   >   0 or if its dynamic norm is strictly lower than a threshold   n init . This translates into a modification of the compression and decompression steps (see Appendix I for details).  IV.   RESULTS AND DISCUSSIONS  In this section we benchmark our algorithm using two paradigmatic models in condensed matter physics; the antiferromagnetic Heisenberg model on square and trian- gular lattices, and the Fermi-Hubbard model on a square lattice.   A typical simulation consists of repeated itera- tions of the main loop illustrated above and, generally speaking, it can be separated into two distinct phases:  thermalization   and   sampling . We call thermalization the convergence phase from the initial state to the ground state, where the number of iterations is   N ther   and dur- ing which the fixed point solution is reached. Sampling generates instead an ensemble of stochastic fixed point solutions.   The initial condition is taken from the solu- tion of the previous one for a sequence of   N samp   esti- mates of the quantum average of the observable   A , us- ing Eq. ( 17 ), is stored. Since all samples are calculated from the same trajectory at different iteration, they are correlated, i.e.   the density matrices are estimated by the same statistical ensemble at different iteration. It is hence clearly necessary to take into account those cor- relations when calculating the statistical error. Variance estimation techniques for correlated samples such as bin- ning analysis [38] allow to estimate the true statistical error.  A.   Case study: the Heisenberg antiferromagnet  We consider a spin-1 / 2 Heisenberg model on a two- dimensional lattice [36]. This is a paradigmatic model in quantum magnetism, whose exact solutions can be only be found for specific cases [39] and, as such, it is still the subject of intense theoretical and numerical investi- gations. The general Hamiltonian reads  H   =   ∑  〈 a,b 〉  J x σ x a   σ x b   +   J y   σ y a   σ y b   +   J z   σ z a   σ z b   ,   (21) where   σ x , σ y   , σ z   are the standard Pauli matrices and  〈 a, b 〉   denotes   nearest neighbours on   the   lattice.   In our simulations, the lattice can be either triangular or squared where spins sit on the lattice points. By setting  J x   =   J y   = 2 J z   =   J   the Hamiltonian of the XXZ spin model is recovered  H   =   J  2  ∑  〈 a,b 〉  σ +  a   σ −  b   +   σ −  a   σ +  b   +   σ z a σ z b   ,   (22) where   σ ±   =   σ x   ±   iσ y   .   This can be further split into a free part and an interacting part   H   =   H free   +   H int , with  H free   =   J  2  ∑  〈 a,b 〉  σ z a σ z b   ,   H int   =   J  2  ∑  〈 a,b 〉  σ +  a   σ −  b   +   σ −  a   σ +  b   .  (23) For a lattice of   L   ×   L   spins, we introduce the eigenbasis of the free Hamiltonian  | e s 1   ,...,s L × L   〉   =   | s 1 〉 ⊗ | s 2 〉 ⊗ · · · ⊗ | s L × L 〉 ,   (24) where   s a   =   s z a   =   ± 1. These describe a precise spin con- figuration of the lattice, where each site is either in a state with spin up or down.   The single-particle opera- tors   σ z   and   σ ±   act of the basis states according to the standard algebra of Pauli matrices  σ z   |± 1 〉   =   ±|± 1 〉 ,   σ ± |∓ 1 〉   =   |± 1 〉 ,   σ ± |± 1 〉   = 0 .  (25) Note that the interaction Hamiltonian does not change the total spin, which is therefore a conserved quantity. We can hence restrict our attention to subspaces of the total Hilbert space characterized by states with an equal number of up and down spins to find the ground state. Since our method closely follows the technical features of the DMQMC algorithm, the sign problem manifests itself in the same fashion, namely by a system specific popula- tion plateau. We performed ground-state simulations for the 4   ×   4 triangular Heisenberg model which is known to be affected by the sign problem [26]. Our simulations dis- play the same qualitative behavior as the one reported in [26] and [29] using FCIQMC and DMQMC, respectively. At first an exponential growth of the triplet’s popula- tion occurs due to a rapid spreading of the triplet over the Hilbert space. Then, because of competing contribu- tions coming from triplets with opposite weight signs, the triplet’s population stabilizes at a plateau height. Finally a second exponential growth stemming from a non-zero ground state energy emerges, signalling that the ground state has been reached and the shift update can be en- abled. The energy and population evolution are plotted in Fig.   2 . The population plateau is the phase in the sim- ulation during which the sign problem is overcome and it corresponds to the noisy section on the energy curve. As 6  0   1   2   3   4   5  -10 -8 -6 -4  0   1   2   3   4   5  0 5 10 15   10   7  FIG. 2. Ground state thermalization for the 4   ×   4 triangular Heisenberg model for   r   = 30,   N i   = 10 3   and various constant shift values.   The plateau stage is clearly visible.   The ex- act ground state density matrix has approximately 1 . 6   ·   10 8  elements.  the plateau phase ends, the energy shift update is used to prevent the triplet’s population unwanted growth. Data sampling begins at this point. The initiator approxima- tion allows one to dramatically decrease the height of the population plateau by tuning the parameter   c init , without accumulating too large a systematic error. If the param- eter   c init   is too large, the statistical errors will be smaller than the systematic one introduced by the initiator ap- proximation itself.   Generally speaking, the parameter  n init   is set to one, resulting in all the triplets with zero dynamic norm being initiators by default. In order to test our importance sampling procedure further simulations of the thermalization phase for the 4   ×   4 square Heisen- berg model have been performed. For this specific model calculating the dynamic norm is computationally expen- sive whenever it is is large. As it turns out, such a calcula- tion is equivalent to a minimum weight perfect-matching problem which can be solved with a Blossom algorithm whose computational complexity scales as   O ( L 6 ) in the worst case scenario [40].   In order to cut down the sim- ulation time, we modify the definition of dynamic norm. For a triplet ( c, i, j ), the new norm   n ij   measures the num- ber of local spin exchanges between the state   i   and state  j .   This can be easily implemented by a bit-wise oper- ation and it is computationally very inexpensive (from and algorithmic point of view, it is fully equivalent to a XOR operation). The results of two independent simu-  FIG. 3.   Ground state thermalization of the 4   ×   4 square Heisenberg model.   The population of both simulations is about 3 . 5   ·   10 5   psips,   r   = 30 and the initial population is 10 4 . The blue line was simulated with importance sampling whereas the red without.  lations, one with importance sampling and one without, are depicted on Fig.   3 .   The final value of the triplet’s population for both simulations is about 3 . 5   ×   10 5 . The statistical error on the value of the ground state energy after sampling is approximately 3 times smaller in the simulation with importance sampling. Note that, if the spring constant   κ   in Eq. ( 20 ) is too large, some physically relevant triplets might be erroneously removed from the simulation. This, in turn, could lead to a severe underes- timate of the triplet distribution and a failure to converge to the correct ground state.  B.   Case study: the Fermi-Hubbard model  The second model we use to benchmark our algorithm is the Fermi-Hubbard model on an   L   ×   L   square lat- tice [37]. Similarly to the Heisenberg model, this is also of paramount importance as it is believed to describe several important phenomena in solid-state physics,   e .g. high-temperature superconductivity.   Yet, a general ex- act solution is completely elusive and the Fermi-Hubbard model has been under investigation for several decades [41]. The Fermi-Hubbard Hamiltonian reads  H   =   − t   ∑  σ = {↑ , ↓}  ∑  〈 a,b 〉  c σ a  † c σ b   +   U   ∑  a  n ↑  a n ↓  a ,   (26) where   a   = 1 , . . . , L 2   are the lattice sites,   〈 a, b 〉   denotes nearest neighbours on the lattice, and   n σ a   =   c σ a   † c σ a   is the number operator for particles with spin   σ   at site   a . The fermionic ladder operators   c σ a   † ,   c σ a   follow the usual anti-commutation rules   { c σ a   † , c σ ′  b   }   =   δ a,b δ σ,σ ′   . The total 7  0   5   10   15   20   25  -20 -10 0  0   5   10   15   20   25  0 5 10 15   10   7  FIG. 4.   Ground state thermalization of the 3   ×   3 Hubbard model with 10 electrons, for   r   = 4,   κ   = 1 / 40,   c init   = 1,  n init   = 1.  10   1   10   2  10   -5  10   -4  FIG. 5. Relative variance   σ 2 /E 2 0   of the ground state energy  E 0   as a function of the inverse time-step   r   for the 1   ×   10 Hub- bard model at half-filling with various interaction strengths. Each point consists of 10 independent simulations, each with the same number iteration   N   = 3 . 2   ·   10 4   and the same popu- lation 10 5 .  Hamiltonian is split into a free and an interaction part  H free   =   U   ∑  a  n ↑  a n ↓  a ,   H int   =   − t   ∑  σ = {↑ , ↓}  ∑  〈 a,b 〉  c σ a  † c σ b   .  (27) An example of the thermalization stage of the 3   ×   3 Hubbard model for   U   = 4,   t   = 1 with 10 electrons is shown of Fig.   4 .   The use of importance sampling, the initiator approximation and a large time-step allows to reduce the height of the plateau and the simulation time to a few minutes only. We show now that the error for a given simulation time decreases with   r . As mentioned previously, no constraint on the lower bound of   r   exists   a priori , since the rate of convergence depends on the initial condition. Indeed, in view of Eq. ( 13 ), if   ρ 0   is chosen close to the fixed point   ρ ∞ , convergence will only take a small number of iterations.   It is therefore desirable to choose   ρ 0   clev- erly in order to decrease the number of iterations needed before the sampling phase.   Furthermore, in our algo- rithm, a large imaginary-time step 1 /r   is more advanta- geous in order to reduce the statistical error on an ob- servable’s average. Since the sampling stage (the region  N/r >   10 on Fig.   3 ) produces a sequence of data points that are correlated to each other, we have to perform a block analysis to estimate the decorrelated variance  σ 2   which, in turn, is related to the measurement’s error bars. This correlated trajectory is characterized by two parameters, the decorrelation time   τ   , related to the num- ber of iterations   M   between two decorrelated points via  M   =   τ r , and the amplitude of the fluctuations around the average, proportional to the jump amplitude 1 / 2 r . The large-scale fluctuations (that is, those at the lowest frequencies) appears to be independent of   r   and, thus, only an increase in the total triplet’s population can re- duce them. For a constant total number of sampled data points   σ 2   ∼   A 2 M   ∼   r , with   A   being the amplitude of the large-scale fluctuations. For a constant number of it- erations and for an increasing time-step, the correlation time will become smaller, thus increasing the number of independent estimates.   In Fig.   5   we show the variance of the ground state energy as a function of   r . The linear unit slope is clearly visible on the right hand side of the figure while the transition to the minimum value is due to the decorrelation time approaching unity, when each data point is uncorrelated from the previous ones.   Re- ducing   r   will only increase the jump amplitude, resulting in an increasing error on the left hand side of the fig- ure. This feature is particularly useful in a perturbative regime where   H free   ≫   H coll   or   U   ≫   t .  V.   CONCLUSIONS AND OPEN PERSPECTIVES  In this manuscript we have introduced a new quantum Monte Carlo method to investigate equilibrium proper- ties of many-body systems. The method uses two-process unravellings to solve a piece-wise-deterministic stochas- tic process whose average reproduces the solution to the zero-temperature Bloch equation.   Furthermore, it al- lows one to statistically sample the density matrix as an ensemble of triplets   { ( c n , i n , j n ) } n   while restricting the Hilbert space exploration to physically relevant states only. Owning to the use of the Laplace transform and of a fixed-point iteration scheme, the unravelling algorithm is exact, excecpt for the initiator approximation. Thus, the rate at which the interaction Hamiltionian is applied to the ensemble of triplets has no   a priori   lower bound. When chosen small enough, this can reduce the number 8  of necessary iterations as well as the statistical error on the statistical averages. In general this work presents an interaction picture method, where the free part is inte- grated exactly due to the choice of the basis and where a small interaction allows a fast convergence. This comes from the fact that the initial state is close to the ground state, thus allowing to choose a very large time-step while still guaranteeing to reach the true ground state. In the light of the findings reported in this article, we are confident that our method can be applied to a num- ber of different scenarios in quantum chemistry and con- densed matter physics. On the other hand, we also fore- see a series of future investigations. We believe the most pressing to be; i) the extension to real-time simulations, including out-of equilibrium dynamics; ii) the application of our method to the study of multi-correlation functions, crucial for understanding quantum correlations; and fi- nally iii) the inclusion of dissipation and decoherence to study thermalization properties.  ACKNOWLEDGEMENTS  R.C. and H.C.O. would like to thank Elia Dietler for his ideas in numerous discussions and for providing valuable simulations.  Appendix A: Compression and decompression steps  Prior to the execution of the loop the ensemble is modified as to improve the statistics without influencing directly the averages.   This modification is carried out through   compression   or   decompression .   In a compres- sion, classes of triplets are formed by grouping together all the triplets associated to a fixed pair of states, for in- stance, ( i, j ). These are then replaced by a single triplet whose weight is equal to the sum of the weights of all the members of the class.   Decompression is applied on a compressed ensemble.   A single class of triplets ( i, j ) is split into triplets with unit-weight (in absolute value) (sgn( c n ) , i n , j n ), and a single rest triplet ( c r   , i n , j n ), with  c r   = sgn( c n )( | c n | − ⌊| c n |⌋ ) ( ⌊·⌋   is the floor function). The rest triplet is then removed from the simulation with probability 1   − | c r   | ; otherwise its weight is updated to sgn( c n ).   That way, the total statistical weight is con- served on average. For the case of initiators the following rules apply;  Initiator decompression   A triplet ( c, i, j ) whose dy- namic norm is strictly lower that a critical value   n init   or whose weight   c   in absolute value is strictly larger than a critical weight   | c |   > c init   is upgraded to initiator. After this step, standard decompression is performed.  Initiator compression   If a ( i, j ) class has a single rep- resentative that was spawned by a non-initiator within the same loop, it is removed from the simulation. Oth- erwise all the triplets in the class ( i, j ) are replaced by a single triplet representative whose weight is the sum of the other representative’s weights.  Appendix B: Population control via shift update  Similarly to DMQMC and related methods, we control the triplet’s population dynamics using the energy shift  S   introduced earlier.   Once the population has reached a desired steady level, the shift is updated according to the following rule  S L   =   S L − 1   −   rξ   log ( P L /P L − 1 )   ,   (B1) where   S L   denotes the shift at loop   L ,   ξ   is a damping parameter and   P L   is the population at loop   L .   During the simulation we keep track of the population right after the compression so that we know the number of spawning attempts   that have been performed in   the previous step. This update step stabilizes the population and guarantees that the energy shift   S ( β ) will converge to the ground state energy   E 0 . The closer the initial shift  S 0   > E 0   is to the ground state energy, the slower the initial triplet’s population will increase. In general, both  S ( β ) and   ξ   will have the same effect on the population as in all related methods previously introduced in literature (see [27] for more details).  Appendix C: Flowchart of the algorithm  [1]   F. Becca   and S. Sorella,   Quantum   Monte   Carlo   Ap- proaches for Correlated Systems   (Cambridge University Press, 2017).  [2]   W. M. C. Foulkes, L. Mitas, R. J. Needs, and G. Ra- jagopal,   Quantum Monte   Carlo   simulations of   solids,  Rev. Mod. Phys.   73 , 33 (2001) .  [3]   N.   Metropolis,   A.   W.   Rosenbluth,   M.   N.   Rosen- bluth,   A.   H.   Teller,   and   E.   Teller,   Equation   of state   calculations   by   fast   computing   machines,  J. Chem. Phys.   21 , 1087 (1953) .  [4]   R. Assaraf and M. Caffarel, Zero-variance principle for Monte Carlo algorithms, Phys. Rev. Lett.   94 , 170201 (2005).  [5]   C.   J.   Umrigar,   Observations   on   varia- tional   and   projector   Monte   Carlo   methods,  The Journal of Chemical Physics   143 , 164105 (2015) ,  https://doi.org/10.1063/1.4933112 .  [6]   C.   J.   Umrigar,   M.   P.   Nightingale,   and K.   J.   Runge,   A   diffusion   Monte   Carlo   al- gorithm   with   very   small   time-step   errors, 9  initialize  copy   ρ l  decompress  apply   L int  r  compress   ρ l   and   L int  r   ρ l  apply   r R free  r  l   ≥   L max ?  end simulation  l   7   →   l   + 1  store Tr( Aρ l ) / Tr( ρ l )  main loop  yes no  ρ l +1  ρ 0  ρ l  ρ l  . . .  . . .  FIG. 6. Flowchart of the triplet unravelling algorithm.   The main loop is in the red rectangle, the spawning step in blue and the free evolution in green.   ρ l   denotes the triplet en- semble at loop   l .   Multiple parallel lines ( e.g.   between the decompression and interaction steps) illustrates the separa- tion of triplets into child triplets. The Journal of Chemical Physics   99 , 2865 (1993) ,  https://doi.org/10.1063/1.465195 .  [7]   N. Metropolis and S. Ulam, The Monte Carlo method,  Journal of the American Statistical Association   44 , 335 (1949) .  [8]   M.   H.   Kalos,   Monte   Carlo   calculations   of   the ground   state   of   three-   and   four-body   nuclei,  Phys. Rev.   128 , 1791 (1962) .  [9]   P.   J.   Reynolds,   J.   Tobochnik,   and H.   Gould,   Diffusion   quantum   Monte Carlo,   Computers in Physics   4 , 662 (1990) ,  https://aip.scitation.org/doi/pdf/10.1063/1.4822960 .  [10]   M.   A.   Lee   and   K.   E.   Schmidt,   Green’s   func- tion Monte Carlo,   Computers in Physics   6 , 192 (1992) ,  https://aip.scitation.org/doi/pdf/10.1063/1.4823061 .  [11]   G.   Sugiyama   and   S.   Koonin,   Auxiliary   field   monte- carlo   for   quantum   many-body   ground   states,  Annals of Physics   168 , 1 (1986) .  [12]   G. H. Lang, C. W. Johnson, S. E. Koonin, and W. E. Ormand, Monte Carlo evaluation of path integrals for the nuclear shell model,   Phys. Rev. C   48 , 1518 (1993) .  [13]   W.   A.   Al-Saidi,   S.   Zhang,   and   H.   Krakauer, Auxiliary-field   quantum   Monte   Carlo   calcula- tions   of   molecular   systems   with   a   gaussian   basis,  The Journal of Chemical Physics   124 , 224101 (2006) ,  https://doi.org/10.1063/1.2200885 .  [14]   R. P. Feynman, Atomic theory of the   λ   transition in he- lium, Physical Review   91 , 1291 (1953).  [15]   W.   Krauth,   Quantum   Monte   Carlo   calculations   for a   large   number   of   bosons   in   a   harmonic   trap,  Phys. Rev. Lett.   77 , 3695 (1996) .  [16]   S. Wessel, F. Alet, M. Troyer, and G. G. Batrouni, Quan- tum Monte Carlo simulations of confined bosonic atoms in optical lattices,   Phys. Rev. A   70 , 053615 (2004) .  [17]   W.   Purwanto   and   S.   Zhang,   Quantum   Monte   Carlo method for the ground state of many-boson systems,  Phys. Rev. E   70 , 056702 (2004) .  [18]   A.   W.   Sandvik,   Computational   studies   of   quantum spin systems, in   AIP Conference Proceedings , Vol. 1297 (American Institute of Physics, 2010) pp. 135–338.  [19]   J.   B.   Anderson,   A   random-walk   simula- tion   of   the   Schroedinger   equation:   H+3,  The Journal of Chemical Physics   63 , 1499 (1975) ,  https://doi.org/10.1063/1.431514 .  [20]   E. Y. Loh,   J. E. Gubernatis,   R. T. Scalettar,   S. R. White, D. J. Scalapino, and R. L. Sugar, Sign problem in the numerical simulation of many-electron systems,  Phys. Rev. B   41 , 9301 (1990) .  [21]   M.   Troyer and U.-J. Wiese, Computational   complex- ity and fundamental limitations to fermionic quantum Monte   Carlo   simulations,   Phys.   Rev.   Lett.   83 ,   4682 (1999).  [22]   P. J. Reynolds, D. M. Ceperley, B. J. Alder, and W. A. Lester, Fixed-node quantum Monte Carlo for molecules,  The Journal of Chemical Physics   77 , 5593 (1982) ,  https://doi.org/10.1063/1.443766 .  [23]   I. W. Bulik, M. J. Frisch, and P. H. Vaccaro, Fixed-node, importance-sampling diffusion Monte Carlo for vibra- tional structure with accurate and compact trial states,  Journal of Chemical Theory and Computation   14 , 1554 (2018) ,  https://doi.org/10.1021/acs.jctc.8b00016 .  [24]   A.   Zen,   J.   G.   Brandenburg,   A.   Michaelides,   and D. Alf` e, A new scheme for fixed node diffusion quantum Monte Carlo with pseudopotentials:   Improving repro- ducibility   and   reducing   the   trial-wave-function   bias,  The Journal of Chemical Physics   151 , 134105 (2019) ,  https://doi.org/10.1063/1.5119729 .  [25]   G. H. Booth, A. J. W. Thom, and A. Alavi, Fermion Monte   Carlo   without   fixed   nodes:   A   game   of   life, death,   and   annihilation   in   Slater   determinant   space,  The Journal of Chemical Physics   131 , 054106 (2009) ,  https://aip.scitation.org/doi/pdf/10.1063/1.3193710 .  [26]   D. Cleland, G. H. Booth, and A. Alavi, Communica- tions:   Survival of the fittest:   Accelerating convergence in full configuration-interaction quantum Monte Carlo,  The Journal of Chemical Physics   132 , 041103 (2010) ,  https://doi.org/10.1063/1.3302277 .  [27]   J. S. Spencer, N. S. Blunt, and W. M. Foulkes, The sign   problem   and   population   dynamics   in   the   full configuration interaction quantum Monte Carlo method,  The Journal of Chemical Physics   136 , 054110 (2012) ,  https://doi.org/10.1063/1.3681396 . 10  [28]   G. H. Booth, A. Gr ̈ uneis, G. Kresse, and A. Alavi, To- wards an exact description of electronic wavefunctions in real solids,   Nature   493 , 365 EP   (2012) , article.  [29]   N. S. Blunt, T. W. Rogers, J. S. Spencer, and W. M. C. Foulkes, Density-matrix quantum Monte Carlo method,  Phys. Rev. B   89 , 245124 (2014) .  [30]   F. D. Malone,   N. S. Blunt, E. W. Brown,   D. K. K. Lee,   J.   S.   Spencer,   W.   M.   C.   Foulkes,   and J.   J.   Shepherd,   Accurate   Exchange-Correlation Energies   for   the   Warm   Dense   Electron   Gas,  Phys. Rev. Lett.   117 , 115701 (2016) .  [31]   F.   D.   Malone,   N.   S.   Blunt,   J.   J.   Shepherd, D.   K.   K.   Lee,   J.   S.   Spencer,   and   W.   M.   C. Foulkes,   Interaction   picture   density   matrix   quan- tum Monte Carlo,   J. Chem. Phys.   143 , 044116 (2015) ,  https://doi.org/10.1063/1.4927434 .  [32]   A.   Nagy   and   V.   Savona,   Driven-dissipative   quan- tum Monte Carlo method for open quantum systems,  Phys. Rev. A   97 , 052129 (2018) .  [33]   H. C.    ̈ Ottinger, Dynamic coarse-graining approach to quantum field theory,   Phys. Rev. D   84 , 065007 (2011) .  [34]   H. C.  ̈ Ottinger,   A Philosophical Approach to Quantum Field Theory   (Cambridge University Press, 2018).  [35]   H.-P. Breuer and F. Petruccione,   The Theory of Open Quantum   Systems   (Oxford   University   Press,   Oxford, 2007).  [36]   W.   Heisenberg,   Mehrk ̈ orperproblem   und Resonanz   in   der   Quantenmechanik,  Zeitschrift f ̈ ur Physik   38 , 411 (1926) .  [37]   J.   Hubbard,   Electron   correla- tions   in   narrow   energy   bands,  Proceedings of the Royal Society A   276 , 238 (1963) .  [38]   V.   Ambegaokar   and   M.   Troyer,   Estimating   errors reliably   in   Monte   Carlo   simulations   of   the   Ehren- fest model,   American Journal of Physics   78 , 150 (2010) ,  https://doi.org/10.1119/1.3247985 .  [39]   A. A. Zvyagin, Generalizations of exactly solvable quan- tum spin models,   Phys. Rev. B   101 , 094403 (2020) .  [40]   W.   Cook   and   A.   Rohe,   Comput- ing   minimum-weight   perfect   matchings,  INFORMS Journal on Computing   11 , 138 (1999) .  [41]   D.   P.   Arovas,   E.   Berg,   S.   A.   Kivel- son,   and   S.   Raghu,   The   Hubbard   model,  Annual Review of Condensed Matter Physics   13 , 238 (2022) ,  https://doi.org/10.1146/annurev-conmatphys-031620-102024 . 